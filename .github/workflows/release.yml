name: Release

on:
  push:
    tags: ['v[0-9]+.*']

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

jobs:
  create-release:
    if: github.repository_owner == 'openrr'
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (linux)
        run: |
          sudo apt-get update
          sudo apt-get install xorg-dev libglu1-mesa-dev

      - run: cargo package
      - uses: taiki-e/create-gh-release-action@v1
        with:
          branch: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  upload-assets:
    name: upload-assets (${{ matrix.os }})
    if: github.repository_owner == 'openrr'
    needs: [create-release]
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (linux)
        run: |
          sudo apt-get update
          sudo apt-get install xorg-dev libglu1-mesa-dev
        if: startsWith(matrix.os, 'ubuntu')
      - run: echo "RUSTFLAGS=${RUSTFLAGS} -C target-feature=+crt-static" >> "${GITHUB_ENV}"
        if: startsWith(matrix.os, 'windows')

      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: urdf-viz
          include: ${{ matrix.include-files }}
          # TODO: Should we enable assimp feature for pre-built binary?
          # all-features: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_PROFILE_RELEASE_LTO: true
