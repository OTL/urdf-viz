name: Release

on:
  push:
    tags: ['v[0-9]+.*']

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

jobs:
  create-release:
    if: github.repository_owner == 'openrr'
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update stable

      - name: Install dependencies (linux)
        run: |
          sudo apt-get update
          sudo apt-get install xorg-dev libglu1-mesa-dev

      - run: cargo package
      - uses: taiki-e/create-gh-release-action@v1
        with:
          branch: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  upload-assets:
    name: upload-assets (${{ matrix.os }})
    if: github.repository_owner == 'openrr'
    needs: [create-release]
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest]
        include:
          - os: windows-latest
            include-files: binaries/x86_64/freetype.dll,binaries/FTL.TXT,binaries/GPLv2.TXT
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        # --no-self-update is necessary because the windows environment cannot self-update rustup.exe.
        run: rustup update stable --no-self-update

      - name: Install dependencies (linux)
        run: |
          sudo apt-get update
          sudo apt-get install xorg-dev libglu1-mesa-dev
        if: startsWith(matrix.os, 'ubuntu')
      - name: Install dependencies (windows)
        run: |
          git clone https://github.com/PistonDevelopers/binaries
          cp binaries/x86_64/freetype.dll $HOME/.rustup/toolchains/stable-x86_64-pc-windows-msvc/lib/rustlib/x86_64-pc-windows-msvc/lib/
          cp binaries/x86_64/freetype.lib $HOME/.rustup/toolchains/stable-x86_64-pc-windows-msvc/lib/rustlib/x86_64-pc-windows-msvc/lib/
        if: startsWith(matrix.os, 'windows')

      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: urdf-viz
          include: ${{ matrix.include-files }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_PROFILE_RELEASE_LTO: true
