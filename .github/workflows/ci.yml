name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 15 * * 0,4' # Every Monday and Friday at 00:00 JST

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTDOCFLAGS: -D warnings
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy,rustfmt
      - name: Install cargo-hack
        uses: taiki-e/install-action@cargo-hack

      - name: Install dependencies (linux)
        run: |
          sudo apt-get update
          sudo apt-get install xorg-dev libglu1-mesa-dev
        if: startsWith(matrix.os, 'ubuntu')
      - run: echo "RUSTFLAGS=${RUSTFLAGS} -C target-feature=+crt-static" >> "${GITHUB_ENV}"
        if: startsWith(matrix.os, 'windows')

      - run: cargo fmt --all --check
      - run: cargo clippy --all-features --all-targets
      - run: cargo hack build --feature-powerset
      - run: cargo test --all-features
      - run: cargo build --release
      # For debugging
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}
          path: target/release/urdf-viz*

  wasm:
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
      - name: Install wasm-pack
        uses: taiki-e/install-action@wasm-pack
      - run: cargo build --target wasm32-unknown-unknown --lib
      - run: cargo build --target wasm32-unknown-unknown -p urdf-viz-wasm
      - name: Build wasm example
        run: npm install && npm run build
        env:
          CARGO_PROFILE_DEV_OPT_LEVEL: 3
          NODE_OPTIONS: --openssl-legacy-provider
        working-directory: examples/wasm
      - name: Deploy to gh-pages
        run: |
          cd examples/wasm/dist
          git init
          git add .
          git -c user.name='ci' -c user.email='ci' commit -m 'Deploy urdf-viz to gh-pages'
          git push -f -q https://git:${{ secrets.github_token }}@github.com/${{ github.repository }} HEAD:gh-pages
        if: github.event_name == 'push' && github.event.ref == 'refs/heads/main' && github.repository_owner == 'openrr'

  deny:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: taiki-e/install-action@cargo-deny
      # Workaround for https://github.com/EmbarkStudios/cargo-deny/issues/413
      - uses: taiki-e/install-action@cargo-no-dev-deps
      - run: cargo no-dev-deps deny --workspace --all-features check

  spell-check:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - run: tools/spell-check.sh
